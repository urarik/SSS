Index: app/src/main/java/org/sehproject/sss/logic/ProfileLogic.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.sehproject.sss.logic\r\n\r\nimport android.content.ContentResolver\r\nimport android.graphics.Bitmap\r\nimport android.graphics.drawable.BitmapDrawable\r\nimport android.net.Uri\r\nimport android.os.Environment\r\nimport android.provider.DocumentsContract\r\nimport android.provider.DocumentsProvider\r\nimport android.util.Log\r\nimport android.widget.CompoundButton\r\nimport android.widget.ImageView\r\nimport androidx.core.content.ContentProviderCompat.requireContext\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions\r\nimport com.google.android.gms.tasks.OnCompleteListener\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.nhn.android.naverlogin.OAuthLogin\r\nimport org.sehproject.sss.dao.AppDatabase\r\nimport org.sehproject.sss.datatype.Profile\r\nimport org.sehproject.sss.utils.UserViewModelFactory\r\nimport org.sehproject.sss.viewmodel.ProfileViewModel\r\nimport org.sehproject.sss.viewmodel.UserViewModel\r\nimport java.io.ByteArrayOutputStream\r\nimport java.io.File\r\nimport java.io.FileOutputStream\r\nimport java.io.InputStream\r\nimport java.net.URI\r\nimport javax.xml.parsers.DocumentBuilder\r\n\r\nclass ProfileLogic(val profileViewModel: ProfileViewModel) {\r\n    fun onEditProfileClick(userId: String) {\r\n        profileViewModel.editProfileEvent.value = userId\r\n    }\r\n\r\n    fun onEditProfileCompleteClick(profile: Profile) {\r\n        val file = File(profileViewModel.imageUri?.path)\r\n\r\n            profileViewModel.profileRepository.editProfile(profile) { code: Int ->\r\n            if (code == 0) {\r\n                profileViewModel.profileRepository.editProfileImage(file) { code: Int ->\r\n                    if (code == 0) {\r\n                        profileViewModel.imageFile = file\r\n                        profileViewModel.editProfileCompleteEvent.call()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fun onUploadImageClick() {\r\n        profileViewModel.uploadImageEvent.call()\r\n    }\r\n\r\n    fun onViewStatisticsClick() {\r\n        profileViewModel.viewStatisticsEvent.call()\r\n    }\r\n\r\n    fun onViewStatisticsExitClick() {\r\n        profileViewModel.viewStatisticsExitEvent.call()\r\n    }\r\n\r\n    fun onSelectOptionClick() {\r\n        profileViewModel.selectOptionEvent.call()\r\n    }\r\n\r\n    fun onSelectNoticeOptionClick(option: Boolean) {\r\n        profileViewModel.profileRepository.updateOption(option, profileViewModel.inviteFriendOptionLiveData.value!!, profileViewModel.invitePlanOptionLiveData.value!!) { code: Int ->\r\n            if(code == 0) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    fun onSelectInviteFriendOptionClick(option: Boolean) {\r\n        profileViewModel.profileRepository.updateOption(profileViewModel.noticeOptionLiveData.value!!, option, profileViewModel.invitePlanOptionLiveData.value!!) { code: Int ->\r\n            if(code == 0) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    fun onSelectInvitePlanOptionClick(option: Boolean) {\r\n        profileViewModel.profileRepository.updateOption(profileViewModel.noticeOptionLiveData.value!!, profileViewModel.inviteFriendOptionLiveData.value!!, option) { code: Int ->\r\n            if(code == 0) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    fun onLogoutClick() {\r\n        profileViewModel.profileRepository.logout { code: Int ->\r\n            if (code == 0) {\r\n                val account = profileViewModel.profileRepository.getSavedAccount()\r\n                val auth = FirebaseAuth.getInstance()\r\n                when (account!!.flag) {\r\n                    1 -> { auth.signOut()\r\n                        profileViewModel.googleSignInClient.signOut()\r\n                            .addOnCompleteListener(OnCompleteListener {\r\n                        })\r\n                    }\r\n                    // 2 ->\r\n                }\r\n                profileViewModel.profileRepository.deleteAccount()\r\n                profileViewModel.logoutEvent.call()\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/org/sehproject/sss/logic/ProfileLogic.kt b/app/src/main/java/org/sehproject/sss/logic/ProfileLogic.kt
--- a/app/src/main/java/org/sehproject/sss/logic/ProfileLogic.kt	(revision 0e6e44c701efb6e976f4b002da14757c3ec61fc9)
+++ b/app/src/main/java/org/sehproject/sss/logic/ProfileLogic.kt	(date 1637990839084)
@@ -95,13 +95,14 @@
             if (code == 0) {
                 val account = profileViewModel.profileRepository.getSavedAccount()
                 val auth = FirebaseAuth.getInstance()
+                val mOAuthLoginModule = OAuthLogin.getInstance()
                 when (account!!.flag) {
                     1 -> { auth.signOut()
                         profileViewModel.googleSignInClient.signOut()
                             .addOnCompleteListener(OnCompleteListener {
                         })
                     }
-                    // 2 ->
+                    // 2 -> mOAuthLoginModule.logout(context)
                 }
                 profileViewModel.profileRepository.deleteAccount()
                 profileViewModel.logoutEvent.call()
