Index: app/src/main/java/org/sehproject/sss/logic/ProfileLogic.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.sehproject.sss.logic\r\n\r\nimport android.content.ContentResolver\r\nimport android.graphics.Bitmap\r\nimport android.graphics.drawable.BitmapDrawable\r\nimport android.net.Uri\r\nimport android.os.Environment\r\nimport android.provider.DocumentsContract\r\nimport android.provider.DocumentsProvider\r\nimport android.util.Log\r\nimport android.widget.CompoundButton\r\nimport android.widget.ImageView\r\nimport androidx.lifecycle.MutableLiveData\r\nimport org.sehproject.sss.datatype.Profile\r\nimport org.sehproject.sss.viewmodel.ProfileViewModel\r\nimport java.io.ByteArrayOutputStream\r\nimport java.io.File\r\nimport java.io.FileOutputStream\r\nimport java.io.InputStream\r\nimport java.net.URI\r\nimport javax.xml.parsers.DocumentBuilder\r\n\r\nclass ProfileLogic(val profileViewModel: ProfileViewModel) {\r\n\r\n    fun onEditProfileClick(userId: String) {\r\n        profileViewModel.editProfileEvent.value = userId\r\n    }\r\n\r\n    fun onEditProfileCompleteClick(profile: Profile) {\r\n        val file = File(profileViewModel.imageUri?.path)\r\n        profileViewModel.imageFile = file\r\n        if (profileViewModel.imageFile != null) {\r\n            Log.d(\"TAG\", \"success\")\r\n        }\r\n        profileViewModel.editProfileCompleteEvent.call()\r\n\r\n//            profileRepository.editProfile(profile) { code: Int ->\r\n//            if (code == 0) {\r\n//                profileRepository.editProfileImage(file) { code: Int ->\r\n//                    if (code == 0) {\r\n//                        val file = File(profileViewModel.imageUri?.path)\r\n//                        profileViewModel.imageFile = file\r\n//                        profileViewModel.editProfileCompleteEvent.call()\r\n//                    }\r\n//                }\r\n//            }\r\n//        }\r\n    }\r\n\r\n    fun onUploadImageClick() {\r\n        profileViewModel.uploadImageEvent.call()\r\n    }\r\n\r\n    fun onViewStatisticsClick() {\r\n        profileViewModel.viewStatisticsEvent.call()\r\n    }\r\n\r\n    fun onViewStatisticsExitClick() {\r\n        profileViewModel.viewStatisticsExitEvent.call()\r\n    }\r\n\r\n    fun onSelectOptionClick() {\r\n        profileViewModel.selectOptionEvent.call()\r\n    }\r\n\r\n    fun onSelectNoticeOptionClick(option: Boolean) {\r\n        profileViewModel.noticeOptionLiveData.value = option\r\n\r\n//        profileRepository.updateOption(option, profileViewModel.inviteFriendOptionLiveData.value!!, profileViewModel.invitePlanOptionLiveData.value!!) { code: Int ->\r\n//            if(code == 0) {\r\n//                TODO(\"옵션 설정 후\")\r\n//            }\r\n//        }\r\n    }\r\n\r\n    fun onSelectInviteFriendOptionClick(option: Boolean) {\r\n        profileViewModel.inviteFriendOptionLiveData.value = option\r\n\r\n//        profileRepository.updateOption(profileViewModel.noticeOptionLiveData.value!!, option, profileViewModel.invitePlanOptionLiveData.value!!) { code: Int ->\r\n//            if(code == 0) {\r\n//                TODO(\"옵션 설정 후\")\r\n//            }\r\n//        }\r\n    }\r\n\r\n    fun onSelectInvitePlanOptionClick(option: Boolean) {\r\n        profileViewModel.invitePlanOptionLiveData.value = option\r\n\r\n//        profileRepository.updateOption(profileViewModel.noticeOptionLiveData.value!!, profileViewModel.inviteFriendOptionLiveData.value!!, option) { code: Int ->\r\n//            if(code == 0) {\r\n//                TODO(\"옵션 설정 후\")\r\n//            }\r\n//        }\r\n    }\r\n\r\n    fun onLogoutClick() {\r\n        profileViewModel.profileRepository.logout { code: Int ->\r\n            if (code == 0) {\r\n                val account = profileViewModel.profileRepository.getSavedAccount()\r\n                when (account!!.flag) {\r\n                    // 1 ->\r\n                    // 2 ->\r\n                }\r\n                profileViewModel.profileRepository.deleteAccount()\r\n                profileViewModel.logoutEvent.call()\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/org/sehproject/sss/logic/ProfileLogic.kt b/app/src/main/java/org/sehproject/sss/logic/ProfileLogic.kt
--- a/app/src/main/java/org/sehproject/sss/logic/ProfileLogic.kt	(revision d3553290e5a04d10a4fcbca6f08a23474df04e5b)
+++ b/app/src/main/java/org/sehproject/sss/logic/ProfileLogic.kt	(date 1637990989143)
@@ -10,9 +10,19 @@
 import android.util.Log
 import android.widget.CompoundButton
 import android.widget.ImageView
+import androidx.core.content.ContentProviderCompat.requireContext
 import androidx.lifecycle.MutableLiveData
+import androidx.lifecycle.ViewModelProvider
+import com.google.android.gms.auth.api.signin.GoogleSignIn
+import com.google.android.gms.auth.api.signin.GoogleSignInOptions
+import com.google.android.gms.tasks.OnCompleteListener
+import com.google.firebase.auth.FirebaseAuth
+import com.nhn.android.naverlogin.OAuthLogin
+import org.sehproject.sss.dao.AppDatabase
 import org.sehproject.sss.datatype.Profile
+import org.sehproject.sss.utils.UserViewModelFactory
 import org.sehproject.sss.viewmodel.ProfileViewModel
+import org.sehproject.sss.viewmodel.UserViewModel
 import java.io.ByteArrayOutputStream
 import java.io.File
 import java.io.FileOutputStream
@@ -21,30 +31,23 @@
 import javax.xml.parsers.DocumentBuilder
 
 class ProfileLogic(val profileViewModel: ProfileViewModel) {
-
     fun onEditProfileClick(userId: String) {
         profileViewModel.editProfileEvent.value = userId
     }
 
     fun onEditProfileCompleteClick(profile: Profile) {
         val file = File(profileViewModel.imageUri?.path)
-        profileViewModel.imageFile = file
-        if (profileViewModel.imageFile != null) {
-            Log.d("TAG", "success")
-        }
-        profileViewModel.editProfileCompleteEvent.call()
-
-//            profileRepository.editProfile(profile) { code: Int ->
-//            if (code == 0) {
-//                profileRepository.editProfileImage(file) { code: Int ->
-//                    if (code == 0) {
-//                        val file = File(profileViewModel.imageUri?.path)
-//                        profileViewModel.imageFile = file
-//                        profileViewModel.editProfileCompleteEvent.call()
-//                    }
-//                }
-//            }
-//        }
+
+            profileViewModel.profileRepository.editProfile(profile) { code: Int ->
+            if (code == 0) {
+                profileViewModel.profileRepository.editProfileImage(file) { code: Int ->
+                    if (code == 0) {
+                        profileViewModel.imageFile = file
+                        profileViewModel.editProfileCompleteEvent.call()
+                    }
+                }
+            }
+        }
     }
 
     fun onUploadImageClick() {
@@ -64,46 +67,48 @@
     }
 
     fun onSelectNoticeOptionClick(option: Boolean) {
-        profileViewModel.noticeOptionLiveData.value = option
+        profileViewModel.profileRepository.updateOption(option, profileViewModel.inviteFriendOptionLiveData.value!!, profileViewModel.invitePlanOptionLiveData.value!!) { code: Int ->
+            if(code == 0) {
 
-//        profileRepository.updateOption(option, profileViewModel.inviteFriendOptionLiveData.value!!, profileViewModel.invitePlanOptionLiveData.value!!) { code: Int ->
-//            if(code == 0) {
-//                TODO("옵션 설정 후")
-//            }
-//        }
+            }
+        }
     }
 
     fun onSelectInviteFriendOptionClick(option: Boolean) {
-        profileViewModel.inviteFriendOptionLiveData.value = option
+        profileViewModel.profileRepository.updateOption(profileViewModel.noticeOptionLiveData.value!!, option, profileViewModel.invitePlanOptionLiveData.value!!) { code: Int ->
+            if(code == 0) {
 
-//        profileRepository.updateOption(profileViewModel.noticeOptionLiveData.value!!, option, profileViewModel.invitePlanOptionLiveData.value!!) { code: Int ->
-//            if(code == 0) {
-//                TODO("옵션 설정 후")
-//            }
-//        }
+            }
+        }
     }
 
     fun onSelectInvitePlanOptionClick(option: Boolean) {
-        profileViewModel.invitePlanOptionLiveData.value = option
+        profileViewModel.profileRepository.updateOption(profileViewModel.noticeOptionLiveData.value!!, profileViewModel.inviteFriendOptionLiveData.value!!, option) { code: Int ->
+            if(code == 0) {
 
-//        profileRepository.updateOption(profileViewModel.noticeOptionLiveData.value!!, profileViewModel.inviteFriendOptionLiveData.value!!, option) { code: Int ->
-//            if(code == 0) {
-//                TODO("옵션 설정 후")
-//            }
-//        }
+            }
+        }
     }
 
     fun onLogoutClick() {
         profileViewModel.profileRepository.logout { code: Int ->
             if (code == 0) {
                 val account = profileViewModel.profileRepository.getSavedAccount()
+                val auth = FirebaseAuth.getInstance()
+                val mOAuthLoginModule = OAuthLogin.getInstance()
                 when (account!!.flag) {
-                    // 1 ->
-                    // 2 ->
+                    1 -> { auth.signOut()
+                        profileViewModel.googleSignInClient.signOut()
+                            .addOnCompleteListener(OnCompleteListener {
+                        })
+                    }
+                    // 2 -> mOAuthLoginModule.logout(context)
                 }
                 profileViewModel.profileRepository.deleteAccount()
                 profileViewModel.logoutEvent.call()
             }
         }
     }
+
+
 }
\ No newline at end of file
